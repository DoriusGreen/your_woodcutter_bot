# sokyrach_bot/main.py

import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup  # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –æ–±'—î–∫—Ç–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ Telegram API
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters, CallbackQueryHandler  # –•–µ–Ω–¥–ª–µ—Ä–∏ —Ç–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∏ –¥–ª—è Telegram
from openai import OpenAI  # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ OpenAI SDK

# --- –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è ---
PORT = int(os.getenv("PORT", 8443))  # –ü–æ—Ä—Ç –¥–ª—è Webhook (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 8443)
WEBHOOK_URL = os.getenv("WEBHOOK_URL")  # URL webhook-—É, —è–∫–∏–π –≤–∫–∞–∑—É—î—Ç—å—Å—è –≤ Render
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")  # –ö–ª—é—á OpenAI –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
BOT_TOKEN = os.getenv("BOT_TOKEN")  # –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# --- –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–ª—ñ—î–Ω—Ç–∞ OpenAI ---
openai = OpenAI(api_key=OPENAI_API_KEY)

# –§—É–Ω–∫—Ü—ñ—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤ —Å—Ç–∏–ª—ñ –°–æ–∫–∏—Ä–∞—á–∞
async def generate_sokyra_reply(user_input: str) -> str:
    prompt = f"""
    –¢–∏ ‚Äî –°–æ–∫–∏—Ä–∞—á. –ì—Ä—É–±–∏–π, –º—É–¥—Ä–∏–π, –≥–Ω—ñ–≤–Ω–∏–π —ñ—Ä–æ–Ω—ñ–∫. –¢–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î—à –∫–æ—Ä–æ—Ç–∫–æ (–¥–æ 3 —Ä—è–¥–∫—ñ–≤), —Ä—É–±–∞—î—à –ø—Ä–∞–≤–¥—É –≤ –ª–æ–±.
    –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–ø–∏—Ç—É—î: "{user_input}"
    –í—ñ–¥–ø–æ–≤—ñ–¥—å –°–æ–∫–∏—Ä–∞—á–∞:
    """
    try:
        response = openai.chat.completions.create(
            model="gpt-4o",  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –Ω–∞–π–Ω–æ–≤—ñ—à—É –º–æ–¥–µ–ª—å GPT-4o
            messages=[
                {"role": "system", "content": "–¢–∏ ‚Äî –ø–µ—Ä—Å–æ–Ω–∞–∂ –°–æ–∫–∏—Ä–∞—á, —è–∫–∏–π –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ä—ñ–∑–∫–æ, –∫–æ—Ä–æ—Ç–∫–æ, –º—É–¥—Ä–æ —Ç–∞ –µ–º–æ—Ü—ñ–π–Ω–æ."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.9,  # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—ñ
            max_tokens=150  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –¥–æ–≤–∂–∏–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        )
        return response.choices[0].message.content.strip()  # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å
    except Exception as e:
        logger.error(f"OpenAI error: {e}")
        return "–°–æ–∫–∏—Ä–∞—á –∑–º–æ–≤—á–∞–≤. –ê–ª–µ —â–æ—Å—å –≤—ñ–Ω —Ç–æ—á–Ω–æ –ø–æ–¥—É–º–∞–≤."  # –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó

# --- –•–µ–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥–∏ /start ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[InlineKeyboardButton("üí• –†—É–±–∞–Ω–∏ –º–µ–Ω—ñ –ø—Ä–∞–≤–¥—É", callback_data="ask")]]  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø–∏—Ç—É
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "–Ø ‚Äî –°–æ–∫–∏—Ä–∞—á. –ó–∞–ø–∏—Ç–∞–π —â–æ—Å—å ‚Äî —ñ —è —Ä—É–±–æ–Ω—É —Ç–æ–±—ñ —Å–ª–æ–≤–æ–º.",
        reply_markup=reply_markup  # –î–æ–¥–∞—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
    )

# --- –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ ---
async def handle_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()  # –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è
    await query.message.reply_text("–ù–∞–ø–∏—à–∏ –º–µ–Ω—ñ —Å–≤–æ—é –¥—É–º–∫—É, —Å–∏—Ç—É–∞—Ü—ñ—é –∞–±–æ –ø–∏—Ç–∞–Ω–Ω—è ‚Äî —ñ —è —Å–∫–∞–∂—É, —è–∫ —î.")

# --- –û–±—Ä–æ–±–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ---
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text  # –¢–µ–∫—Å—Ç –∑–∞–ø–∏—Ç—É –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    await update.message.chat.send_action(action="typing")  # –ê–Ω—ñ–º–∞—Ü—ñ—è "–¥—Ä—É–∫—É–≤–∞–Ω–Ω—è"
    response = await generate_sokyra_reply(user_input)  # –ì–µ–Ω–µ—Ä—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å GPT
    await update.message.reply_text(response)  # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É

# --- –ì–æ–ª–æ–≤–Ω–∞ —Ç–æ—á–∫–∞ –∑–∞–ø—É—Å–∫—É ---
def main():
    application = Application.builder().token(BOT_TOKEN).build()  # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–æ–¥–∞—Ç–æ–∫ Telegram

    # –†–µ—î—Å—Ç—Ä—É—î–º–æ —Ö–µ–Ω–¥–ª–µ—Ä–∏
    application.add_handler(CommandHandler("start", start))  # –ö–æ–º–∞–Ω–¥–∞ /start
    application.add_handler(CallbackQueryHandler(handle_button))  # –ö–Ω–æ–ø–∫–∏
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))  # –ó–≤–∏—á–∞–π–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è

    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç —á–µ—Ä–µ–∑ webhook (–Ω–µ polling)
    application.run_webhook(
        listen="0.0.0.0",  # –ü—Ä–∏–π–º–∞—î–º–æ –≤—Å—ñ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
        port=PORT,  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ—Ä—Ç –∑ ENV –∞–±–æ 8443
        url_path="",  # –ù–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω –¥–æ–¥–∞—Ç–∫–æ–≤–∏–π —à–ª—è—Ö
        webhook_url=WEBHOOK_URL  # –ü–æ–≤–Ω–∏–π URL webhook-—É
    )

# --- –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç—É ---
if __name__ == "__main__":
    main()  # –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ—Å–Ω–æ–≤–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
