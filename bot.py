# bot.py

import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters, CallbackQueryHandler
import openai

# --- –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è ---
PORT = int(os.getenv("PORT", 8443))
WEBHOOK_URL = os.getenv("WEBHOOK_URL")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

openai.api_key = OPENAI_API_KEY

# –§—É–Ω–∫—Ü—ñ—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤ —Å—Ç–∏–ª—ñ –°–æ–∫–∏—Ä–∞—á–∞
async def generate_sokyra_reply(user_input: str) -> str:
    prompt = f"""
    –¢–∏ ‚Äî –°–æ–∫–∏—Ä–∞—á. –ì—Ä—É–±–∏–π, –º—É–¥—Ä–∏–π, —Ç—Ä–æ—Ö–∏ –∞–≥—Ä–µ—Å–∏–≤–Ω–∏–π, –∑ —ñ—Ä–æ–Ω—ñ—î—é —ñ –≥–æ—Å—Ç—Ä–∏–º —è–∑–∏–∫–æ–º. –í—ñ–¥–ø–æ–≤—ñ–¥—ñ ‚Äî –∫–æ—Ä–æ—Ç–∫—ñ (–¥–æ 3 —Ä—è–¥–∫—ñ–≤), —è–∫ —Å–æ–∫–∏—Ä–Ω–∏–π —É–¥–∞—Ä. –ë–µ–∑ –≤–æ–¥–∏, –±–µ–∑ –º–æ—Ä–∞–ª–µ–π. –¢–≤—ñ–π —Å—Ç–∏–ª—å: –ø–æ—î–¥–Ω–∞–Ω–Ω—è –º—É–¥—Ä–æ—Å—Ç—ñ, —Å–∞—Ä–∫–∞–∑–º—É, –≥–Ω—ñ–≤—É, —ñ—Ä–æ–Ω—ñ—ó —Ç–∞ —Ñ—ñ–ª–æ—Å–æ—Ñ—ñ—ó. 
    –¢–≤–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –º—É–¥—Ä—ñ, —á—ñ—Ç–∫—ñ, –≤–ª—É—á–Ω—ñ, —Ü—ñ–∫–∞–≤—ñ, –∞–ª–µ –ø—Ä–∏ —Ü—å–æ–º—É –ø–æ-—Å–ø—Ä–∞–≤–∂–Ω—å–æ–º—É –∫–æ—Ä–∏—Å–Ω—ñ —Ç–∞ –≥–ª–∏–±–æ–∫—ñ. –ó–∞ –ø–æ—Ç—Ä–µ–±–∏ –º–æ–∂–µ—à –ø—Ä–∏–≤–æ–¥–∏—Ç–∏ –ø—Ä–∏–∫–ª–∞–¥–∏, –∞–Ω–∞–ª–æ–≥—ñ—ó, –º–µ—Ç–∞—Ñ–æ—Ä–∏, —Ç–æ—â–æ, —è–∫—â–æ —Ü–µ –≤–¥–∞–ª–æ —ñ–Ω—Ç–µ—Ä–≥—Ä—É—î—Ç—å—Å—è –≤ –∑–∞–≥–∞–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è. 
    –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–ø–∏—Ç—É—î: "{user_input}"
    –°–æ–∫–∏—Ä–∞—á –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î:
    """
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": "–¢–∏ ‚Äî –ø–µ—Ä—Å–æ–Ω–∞–∂ –°–æ–∫–∏—Ä–∞—á, —è–∫–∏–π –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ä—ñ–∑–∫–æ, –∫–æ—Ä–æ—Ç–∫–æ, –º—É–¥—Ä–æ —Ç–∞ –µ–º–æ—Ü—ñ–π–Ω–æ."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.9,
            max_tokens=150
        )
        return response.choices[0].message['content'].strip()
    except Exception as e:
        logger.error(f"OpenAI error: {e}")
        return "–°–æ–∫–∏—Ä–∞—á –∑–º–æ–≤—á–∞–≤. –ê–ª–µ —â–æ—Å—å –≤—ñ–Ω —Ç–æ—á–Ω–æ –ø–æ–¥—É–º–∞–≤."

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[InlineKeyboardButton("üí• –†—É–±–∞–Ω–∏ –º–µ–Ω—ñ –ø—Ä–∞–≤–¥—É", callback_data="ask")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "–Ø ‚Äî –°–æ–∫–∏—Ä–∞—á. –ó–∞–ø–∏—Ç–∞–π —â–æ—Å—å ‚Äî —ñ —è —Ä—É–±–æ–Ω—É —Ç–æ–±—ñ —Å–ª–æ–≤–æ–º.",
        reply_markup=reply_markup
    )

async def handle_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    await query.message.reply_text("–ù–∞–ø–∏—à–∏ –º–µ–Ω—ñ —Å–≤–æ—é –¥—É–º–∫—É, —Å–∏—Ç—É–∞—Ü—ñ—é –∞–±–æ –ø–∏—Ç–∞–Ω–Ω—è ‚Äî —ñ —è —Å–∫–∞–∂—É, —è–∫ —î.")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text
    await update.message.chat.send_action(action="typing")
    response = await generate_sokyra_reply(user_input)
    await update.message.reply_text(response)

def main():
    application = Application.builder().token(TELEGRAM_BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(handle_button))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    application.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        url_path="",
        webhook_url=WEBHOOK_URL
    )

if __name__ == "__main__":
    main()
